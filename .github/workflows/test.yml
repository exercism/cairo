# This workflow will do a clean install of the dependencies and run tests across different versions
#
# Replace <track> with the track name
# Replace <image-name> with an image to run the jobs on
# Replace <action to setup tooling> with a github action to setup tooling on the image
# Replace <install dependencies> with a cli command to install the dependencies
#
# Find Github Actions to setup tooling here:
# - https://github.com/actions/?q=setup&type=&language=
# - https://github.com/actions/starter-workflows/tree/main/ci
# - https://github.com/marketplace?type=actions&query=setup
#
# Requires scripts:
# - bin/verify-exercises

name: CI

# Run this workflow every time a new commit is pushed to the repository
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
  schedule:
    # Weekly.
    - cron: "0 0 * * 0"

jobs:
  markdownlint:
    name: markdown lint
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29

      - name: Run markdown lint
        run: ./bin/lint_markdown.sh
        
  build:
    name: Check build
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29
        
      - name: Fetch origin/main
        run: git fetch --depth=1 origin main
      
      - name: Getting scarb
        uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: "2.6.3"
          
      - name: Verify all exercises
        env:
          DENYWARNINGS: "1"
        run: bin/verify-exercises

  format:
    name: Check Cairo formatting
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29
      
      - name: Getting scarb
        uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: "2.6.3"

      - name: Format
        run: ./bin/format_exercises.sh

      - name: Diff
        run: |
          if ! git diff --color --exit-code; then
            echo "Please run cargo fmt, or see the diff above:"
            exit 1
          fi
